version: '3.8'

services:
  ebpf-monitor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ebpf-monitor
    restart: unless-stopped
    
    # eBPF requires privileged mode and host network
    privileged: true
    network_mode: host
    
    # Mount BPF filesystem
    volumes:
      - /sys/fs/bpf:/sys/fs/bpf:rw
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - ./data:/app/data:rw
      - ./config.toml:/app/config.toml:ro
      - ./logs:/app/logs:rw
    
    # Environment variables
    environment:
      - LOG_LEVEL=info
      - INTERFACE=eth0
      - CONFIG_PATH=/app/config.toml
    
    # Command override
    command: [
      "./ebpf-monitor",
      "-config=/app/config.toml",
      "-log-level=${LOG_LEVEL:-info}",
      "-interface=${INTERFACE:-eth0}"
    ]
    
    # Health check
    healthcheck:
      test: ["CMD", "pgrep", "ebpf-monitor"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    
    # Labels for management
    labels:
      - "com.example.service=ebpf-monitor"
      - "com.example.version=1.0"
      - "com.example.description=eBPF Network Monitor"

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: ebpf-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - ebpf-monitor
    profiles:
      - monitoring

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: ebpf-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - ebpf-monitor
    profiles:
      - monitoring

  # Optional: Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: ebpf-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    profiles:
      - monitoring

volumes:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local

networks:
  default:
    name: ebpf-monitor-network
    driver: bridge